{"version":3,"sources":["config/index.js","components/NetworksContainer/Network.js","components/NetworksContainer/index.js","components/Controls/index.js","App.js","index.js"],"names":["TRUST_EDGE","width","color","dashes","DEFAULT_OPTIONS","layout","hierarchical","edges","smooth","length","arrows","to","enabled","scaleFactor","TRUST_EDGES","from","label","START_MODEL","id","opinion","OPINIONS","Network","graph","useState","state","setState","setNetwork","useEffect","EVENTS","select","nodes","console","log","doubleClick","pointer","canvas","className","options","events","style","height","border","getNetwork","_network","NetworksContainer","initialModel","setCanUpdate","counter","graphs","setGraphs","addModel","checkCanUpdate","last","lastNodes","opinionEdges","filter","edge","dynamics","reduce","ac","cur","forEach","node","trustLevel","parseFloat","find","undefined","nextNodes","Object","entries","map","delta","prev","current","getNextNodes","JSON","stringify","res","showArrows","centerMode","selectedItem","autoPlay","showStatus","g","i","Controls","setInitialModel","canUpdate","handleClickUpdate","setNodes","setEdges","started","setStarted","handleSubmit","value","onChange","e","target","newNodes","n","handleSelectOption","op","type","min","max","step","newEdges","toString","handleChangeEdgePercent","onClick","disabled","App","setCounter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1683e7c3.chunk.js","sourcesContent":["export const TRUST_EDGE = { width: 0.7, color: \"#cccccc\", dashes: true };\n\nexport const DEFAULT_OPTIONS = {\n  layout: {\n    hierarchical: false,\n  },\n  edges: {\n    smooth: true,\n    length: 400,\n    width: 0.9,\n    color: \"#007296\",\n    arrows: {\n      to: {\n        enabled: false,\n        scaleFactor: 0.5,\n      },\n    },\n  },\n};\n\nexport const TRUST_EDGES = [\n  { from: \"a\", to: \"a\", arrows: \"to\", label: \"0.1\", ...TRUST_EDGE },\n  { from: \"a\", to: \"b\", arrows: \"to\", label: \"0.8\", ...TRUST_EDGE },\n  { from: \"a\", to: \"c\", arrows: \"to\", label: \"0.1\", ...TRUST_EDGE },\n  { from: \"b\", to: \"a\", arrows: \"to\", label: \"0.3\", ...TRUST_EDGE },\n  { from: \"b\", to: \"b\", arrows: \"to\", label: \"0.4\", ...TRUST_EDGE },\n  { from: \"b\", to: \"c\", arrows: \"to\", label: \"0.3\", ...TRUST_EDGE },\n  { from: \"c\", to: \"a\", arrows: \"to\", label: \"0.2\", ...TRUST_EDGE },\n  { from: \"c\", to: \"b\", arrows: \"to\", label: \"0.2\", ...TRUST_EDGE },\n  { from: \"c\", to: \"c\", arrows: \"to\", label: \"0.6\", ...TRUST_EDGE },\n];\n\nexport const START_MODEL = {\n  nodes: [\n    { id: \"a\", label: \"a: p↑\", opinion: \"p↑\" },\n    { id: \"b\", label: \"b: p↓\", opinion: \"p↓\" },\n    { id: \"c\", label: \"c: p-\", opinion: \"p-\" },\n  ],\n  edges: [\n    { from: \"a\", to: \"b\" },\n    { from: \"a\", to: \"c\" },\n    { from: \"b\", to: \"c\" },\n  ],\n};\n\nexport const OPINIONS = [\"p↑\", \"p-\", \"p↓\"];\n","import { useEffect, useState } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { DEFAULT_OPTIONS } from \"../../config\";\n\nconst Network = ({ graph }) => {\n  const [state, setState] = useState(null);\n  const [network, setNetwork] = useState(null);\n\n  useEffect(() => {\n    graph && setState(graph);\n  }, [graph]);\n\n  const EVENTS = {\n    select: ({ nodes, edges }) => {\n      console.log(\"Selected nodes:\");\n      console.log(nodes);\n      console.log(\"Selected edges:\");\n      console.log(edges);\n    },\n    doubleClick: ({ pointer: { canvas } }) => {},\n  };\n  return (\n    <div className=\"graph-wrap\">\n      {state && (\n        <Graph\n          graph={state}\n          options={DEFAULT_OPTIONS}\n          events={EVENTS}\n          style={{ height: \"600px\", width: \"550px\", border: \"1px solid #ccc\" }}\n          getNetwork={(_network) => setNetwork(_network)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Network;\n","import { useEffect, useState } from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nimport { START_MODEL } from \"../../config\";\nimport Network from \"./Network\";\n\nconst NetworksContainer = ({ initialModel, setCanUpdate, counter }) => {\n  const [graphs, setGraphs] = useState(null);\n\n  useEffect(() => {\n    if (initialModel && counter > 1) {\n      addModel();\n    }\n  }, [counter]);\n\n  useEffect(() => {\n    console.log(\"@initialModel\", initialModel);\n    initialModel && setGraphs([initialModel]);\n  }, [initialModel]);\n\n  useEffect(() => {\n    initialModel && graphs && setCanUpdate(!!checkCanUpdate());\n  }, [graphs, initialModel]);\n\n  const getNextNodes = () => {\n    const last = graphs[graphs.length - 1];\n    console.log(\"@@@graphs\", graphs);\n    const { nodes: lastNodes, edges } = last;\n\n    const opinionEdges = edges.filter((edge) => !!edge.label);\n    const dynamics = lastNodes.reduce(\n      (ac, cur) => ({ ...ac, [cur.id]: {} }),\n      {}\n    );\n\n    lastNodes.forEach((node) => {\n      const { id } = node;\n      const trustEdges = opinionEdges.filter((edge) => edge.from === id);\n\n      trustEdges.forEach((edge) => {\n        const { to, label } = edge;\n        const trustLevel = parseFloat(label);\n        const { opinion } = lastNodes.find((node) => node.id === to);\n        dynamics[id][opinion] =\n          dynamics[id][opinion] !== undefined\n            ? dynamics[opinion] + trustLevel\n            : trustLevel;\n      });\n    });\n    const nextNodes = Object.entries(dynamics).map(([id, delta]) => {\n      const [opinion, _percent] = Object.entries(delta).reduce(\n        (prev, current) => (prev[1] > current[1] ? prev : current)\n      );\n      return { id, label: `${id}: ${opinion}`, opinion };\n    });\n\n    return { nextNodes, lastNodes, edges };\n  };\n\n  const checkCanUpdate = () => {\n    const { nextNodes, lastNodes, edges } = getNextNodes();\n\n    return JSON.stringify(nextNodes) !== JSON.stringify(lastNodes)\n      ? { nextNodes, lastNodes, edges }\n      : false;\n  };\n\n  const addModel = () => {\n    const res = checkCanUpdate();\n\n    if (res) {\n      const { nextNodes, edges } = res;\n      setGraphs((prev) => [...prev, { nodes: nextNodes, edges }]);\n    } else {\n      setCanUpdate(false);\n    }\n  };\n\n  return (\n    <div className=\"networks-container\">\n      {initialModel && graphs && (\n        <Carousel\n          showArrows={true}\n          centerMode={true}\n          selectedItem={graphs.length - 1}\n          autoPlay={false}\n          showStatus={false}\n        >\n          {graphs.map((g, i) => (\n            <Network key={i} graph={g} />\n          ))}\n        </Carousel>\n      )}\n    </div>\n  );\n};\n\nexport default NetworksContainer;\n","import { useState } from \"react\";\nimport { OPINIONS, START_MODEL, TRUST_EDGES } from \"../../config\";\n\nconst Controls = ({ setInitialModel, canUpdate, handleClickUpdate }) => {\n  const [nodes, setNodes] = useState(START_MODEL.nodes);\n  const [edges, setEdges] = useState(TRUST_EDGES);\n  const [started, setStarted] = useState(false);\n\n  const handleSelectOption = (e, id) => {\n    const opinion = e.target.value;\n    const newNodes = nodes.map((n) => {\n      if (n.id === id) {\n        return { ...n, opinion, label: `${n.id}: ${opinion}` };\n      } else {\n        return n;\n      }\n    });\n    setNodes(newNodes);\n  };\n\n  const handleChangeEdgePercent = (e, from, to) => {\n    const newEdges = edges.map((edge) => {\n      if (edge.from === from && edge.to === to) {\n        return { ...edge, label: e.target.value.toString() };\n      } else return edge;\n    });\n    setEdges(newEdges);\n  };\n\n  const handleSubmit = () => {\n    const graph = { nodes, edges: [...START_MODEL.edges, ...edges] };\n    setInitialModel(graph);\n    setStarted(true);\n  };\n\n  const renderSelectEdges = () => (\n    <div>\n      {edges.map((edge, i) => (\n        <div key={i}>\n          <span>\n            агент {edge.from} верит {edge.to} как:{\" \"}\n          </span>\n          <input\n            type=\"number\"\n            value={edge.label}\n            min={0}\n            max={1}\n            step={0.1}\n            onChange={(e) => handleChangeEdgePercent(e, edge.from, edge.to)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderSelectNodes = () => (\n    <div>\n      {nodes.map((node) => (\n        <div>\n          <span>aгент {node.id} верит, что: </span>\n          <select\n            value={node.opinion}\n            onChange={(e) => handleSelectOption(e, node.id)}\n          >\n            {OPINIONS.map((op) => (\n              <option key={op} value={op}>\n                {op}\n              </option>\n            ))}\n          </select>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderButtons = () => (\n    <div>\n      <button onClick={handleSubmit}>\n        {started ? \"Перезапустить\" : \"Начать\"}\n      </button>\n      <button\n        disabled={started && canUpdate !== true}\n        onClick={handleClickUpdate}\n      >\n        Обновить сеть\n      </button>\n    </div>\n  );\n\n  return (\n    <div className=\"controls-container\">\n      {renderSelectNodes()}\n      {renderSelectEdges()}\n      {renderButtons()}\n    </div>\n  );\n};\n\nexport default Controls;\n","import { useState } from \"react\";\nimport NetworksContainer from \"./components/NetworksContainer\";\nimport Controls from \"./components/Controls\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nfunction App() {\n  const [canUpdate, setCanUpdate] = useState(false);\n  const [initialModel, setInitialModel] = useState(null);\n  const [counter, setCounter] = useState(1);\n\n  const handleClickUpdate = () => {\n    setCounter((prev) => prev + 1);\n  };\n\n  return (\n    <main>\n      <Controls\n        canUpdate={canUpdate}\n        handleClickUpdate={handleClickUpdate}\n        setInitialModel={setInitialModel}\n      />\n      {\n        <NetworksContainer\n          initialModel={initialModel}\n          setCanUpdate={setCanUpdate}\n          counter={counter}\n        />\n      }\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}